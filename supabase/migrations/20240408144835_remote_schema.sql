create extension if not exists "http" with schema "extensions";


create sequence "public"."usernotifications_notification_id_seq";

create sequence "public"."users_user_id_seq";

alter table "public"."comments" drop constraint "comments_recipe_id_fkey";

alter table "public"."ingredients" drop constraint "ingredients_recipe_id_fkey";

alter table "public"."likes" drop constraint "likes_recipe_id_fkey";

alter table "public"."recipe_tags" drop constraint "recipe_tags_recipe_id_fkey";

alter table "public"."recipe_tags" drop constraint "recipe_tags_recipe_id_tag_id_key";

alter table "public"."recipe_tags" drop constraint "recipe_tags_tag_id_fkey";

alter table "public"."users" drop constraint "users_username_key";

alter table "public"."likes" drop constraint "likes_pkey";

drop index if exists "public"."likes_pkey";

drop index if exists "public"."recipe_tags_recipe_id_tag_id_key";

drop index if exists "public"."users_username_key";

create table "public"."usernotifications" (
    "notification_id" integer not null default nextval('usernotifications_notification_id_seq'::regclass),
    "user_id" uuid not null,
    "type" text not null,
    "reference_id" integer not null,
    "seen" boolean default false,
    "created_at" timestamp with time zone default CURRENT_TIMESTAMP
);


alter table "public"."comments" drop column "comment";

alter table "public"."comments" drop column "recipe_id";

alter table "public"."comments" drop column "uuid";

alter table "public"."comments" add column "body" text not null;

alter table "public"."comments" add column "parent_id" integer;

alter table "public"."comments" add column "slug" text not null;

alter table "public"."comments" add column "user_id" uuid default auth.uid();

alter table "public"."comments" alter column "comment_id" drop default;

alter table "public"."comments" alter column "comment_id" add generated always as identity;

alter table "public"."comments" alter column "created_at" set default now();

alter table "public"."comments" alter column "created_at" set not null;

alter table "public"."ingredients" add column "profile_id" uuid;

alter table "public"."ingredients" add column "unit" text;

alter table "public"."ingredients" alter column "ingredient_id" drop default;

alter table "public"."ingredients" alter column "ingredient_id" add generated by default as identity;

alter table "public"."ingredients" alter column "name" drop not null;

alter table "public"."ingredients" alter column "name" set data type character varying using "name"::character varying;

alter table "public"."ingredients" alter column "quantity" set data type character varying using "quantity"::character varying;

alter table "public"."ingredients" alter column "recipe_id" drop not null;

alter table "public"."likes" drop column "uuid";

alter table "public"."likes" add column "profile_id" uuid;

alter table "public"."likes" alter column "created_at" drop default;

alter table "public"."likes" alter column "like_id" drop default;

alter table "public"."likes" alter column "like_id" drop not null;

alter table "public"."likes" alter column "recipe_id" drop not null;

alter table "public"."profiles" disable row level security;

alter table "public"."recipe_tags" alter column "recipe_id" drop not null;

alter table "public"."recipe_tags" alter column "tag_id" drop not null;

alter table "public"."recipes" drop column "uuid";

alter table "public"."recipes" add column "profile_id" uuid;

alter table "public"."recipes" alter column "created_at" drop default;

alter table "public"."recipes" alter column "description" drop not null;

alter table "public"."recipes" alter column "instructions" drop not null;

alter table "public"."recipes" alter column "recipe_id" drop default;

alter table "public"."recipes" alter column "recipe_id" add generated by default as identity;

alter table "public"."recipes" alter column "title" drop not null;

alter table "public"."recipes" alter column "title" set data type character varying using "title"::character varying;

alter table "public"."users" drop column "bio";

alter table "public"."users" drop column "hashed_password";

alter table "public"."users" drop column "profile_picture_url";

alter table "public"."users" drop column "username";

alter table "public"."users" add column "password_hash" character varying(255) not null;

alter table "public"."users" add column "updated_at" timestamp with time zone default CURRENT_TIMESTAMP;

alter table "public"."users" add column "uuid" uuid not null default uuid_generate_v4();

alter sequence "public"."usernotifications_notification_id_seq" owned by "public"."usernotifications"."notification_id";

drop sequence if exists "public"."comments_comment_id_seq";

drop sequence if exists "public"."ingredients_ingredient_id_seq";

drop sequence if exists "public"."likes_like_id_seq";

drop sequence if exists "public"."recipes_recipe_id_seq";

CREATE UNIQUE INDEX usernotifications_pkey ON public.usernotifications USING btree (notification_id);

CREATE UNIQUE INDEX users_pkey ON public.users USING btree (uuid);

alter table "public"."usernotifications" add constraint "usernotifications_pkey" PRIMARY KEY using index "usernotifications_pkey";

alter table "public"."users" add constraint "users_pkey" PRIMARY KEY using index "users_pkey";

alter table "public"."comments" add constraint "comments_body_check" CHECK (((length(body) >= 1) AND (length(body) <= 2000))) not valid;

alter table "public"."comments" validate constraint "comments_body_check";

alter table "public"."comments" add constraint "comments_parent_id_fkey" FOREIGN KEY (parent_id) REFERENCES comments(comment_id) not valid;

alter table "public"."comments" validate constraint "comments_parent_id_fkey";

alter table "public"."comments" add constraint "comments_user_id_fkey" FOREIGN KEY (user_id) REFERENCES profiles(id) not valid;

alter table "public"."comments" validate constraint "comments_user_id_fkey";

alter table "public"."ingredients" add constraint "fk_ingredients_recipes" FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id) not valid;

alter table "public"."ingredients" validate constraint "fk_ingredients_recipes";

alter table "public"."likes" add constraint "fk_likes_profiles" FOREIGN KEY (profile_id) REFERENCES profiles(id) not valid;

alter table "public"."likes" validate constraint "fk_likes_profiles";

alter table "public"."recipes" add constraint "fk_recipes_profiles" FOREIGN KEY (profile_id) REFERENCES profiles(id) not valid;

alter table "public"."recipes" validate constraint "fk_recipes_profiles";

alter table "public"."usernotifications" add constraint "fk_user" FOREIGN KEY (user_id) REFERENCES profiles(id) ON DELETE CASCADE not valid;

alter table "public"."usernotifications" validate constraint "fk_user";

grant delete on table "public"."usernotifications" to "anon";

grant insert on table "public"."usernotifications" to "anon";

grant references on table "public"."usernotifications" to "anon";

grant select on table "public"."usernotifications" to "anon";

grant trigger on table "public"."usernotifications" to "anon";

grant truncate on table "public"."usernotifications" to "anon";

grant update on table "public"."usernotifications" to "anon";

grant delete on table "public"."usernotifications" to "authenticated";

grant insert on table "public"."usernotifications" to "authenticated";

grant references on table "public"."usernotifications" to "authenticated";

grant select on table "public"."usernotifications" to "authenticated";

grant trigger on table "public"."usernotifications" to "authenticated";

grant truncate on table "public"."usernotifications" to "authenticated";

grant update on table "public"."usernotifications" to "authenticated";

grant delete on table "public"."usernotifications" to "service_role";

grant insert on table "public"."usernotifications" to "service_role";

grant references on table "public"."usernotifications" to "service_role";

grant select on table "public"."usernotifications" to "service_role";

grant trigger on table "public"."usernotifications" to "service_role";

grant truncate on table "public"."usernotifications" to "service_role";

grant update on table "public"."usernotifications" to "service_role";


